function wideTbl = roomWallSegments(roomTbl, topoTbl)
%ROOMWALLSEGMENTSWIDE  One‑row‑per‑room summary with every interior wall segment.
%   wideTbl = ROOMWALLSEGMENTSWIDE(roomTbl, topoTbl)
%   Assumes **exact** English column names generated by save_topology_image.py:
%       roomTbl : RoomID | Type | Area | Perimeter | ExtWallLength | ExtWallWidth
%       topoTbl : RoomA  | RoomB | ConnectionType | Length | Width
%   Output columns (pixel units):
%       RoomID  Type  Area_px  Perimeter_px  ExtWallLength_px  ExtWallWidth_px
%       Seg1Len_px Seg1Wid_px Seg2Len_px Seg2Wid_px ... (one room = one row)
%   *No case‑conversion or trimming logic: column contents must match exactly.*

% -------- 1. Basic setup ----------------------------------------------
roomTbl.RoomID = string(roomTbl.RoomID);          % ensure string for comparison
N        = height(roomTbl);
RoomID   = roomTbl.RoomID;

roomA  = string(topoTbl.RoomA);
roomB  = string(topoTbl.RoomB);
ctype  = string(topoTbl.ConnectionType);          % expected exact 'Wall'
lenCol = topoTbl.Length;
widCol = topoTbl.Width;

% -------- 2. Max interior‑segment count -------------------------------
maxSeg = 0;
for i = 1:N
    rid = RoomID(i);
    mask = (roomA==rid | roomB==rid) & (ctype=="Wall");
    maxSeg = max(maxSeg, nnz(mask));
end

% -------- 3. Base room info table -------------------------------------
baseVars = table(RoomID, roomTbl.Type, roomTbl.Area, roomTbl.Perimeter, ...
                 roomTbl.ExtWallLength, roomTbl.ExtWallWidth, ...
                 'VariableNames',{ 'RoomID','Type','Area_px','Perimeter_px', ...
                                  'ExtWallLength_px','ExtWallWidth_px'});

% -------- 4. Preallocate segment matrix -------------------------------
segMat = nan(N, maxSeg*2);
segNames = strings(1,maxSeg*2);
for k = 1:maxSeg
    segNames(2*k-1) = "Seg"+k+"Len_px";
    segNames(2*k)   = "Seg"+k+"Wid_px";
end

% -------- 5. Fill segment data ----------------------------------------
for i = 1:N
    rid = RoomID(i);
    mask = (roomA==rid | roomB==rid) & (ctype=="Wall");
    lenVec = lenCol(mask);
    widVec = widCol(mask);
    if ~isempty(lenVec)
        flat = reshape([lenVec.'; widVec.'],1,[]);  % interleave
        segMat(i,1:numel(flat)) = flat;
    end
end

segTblPart = array2table(segMat,'VariableNames',cellstr(segNames));

% -------- 6. Combine & return -----------------------------------------
wideTbl = [baseVars segTblPart];
end
